logCPM <- as.data.frame(logCPM)
long_logCPM <- logCPM
###### limma
long_logCPM <- data.frame(current_tax$X.OTU.ID, logCPM)
#### general
long_logCPM <- pivot_longer(long_logCPM, names_to = "name", values_to = "value", cols = 2:ncol(long_logCPM))
colnames(long_logCPM)[1] <- "OTU"
ggplot(long_logCPM, aes(x=name,y=value))+
geom_boxplot()+
theme(axis.text.x = element_text(angle=90))+
xlab('sample')+
ylab('log2(CPM(raw counts + 1))')
### limma
df <- current_tax[,-c(1:2)]
dge <- DGEList(df)
### general
logCPM <- cpm(dge, log = TRUE, prior.count = 1)
logCPM <- as.data.frame(logCPM)
long_logCPM <- logCPM
###### limma
long_logCPM <- data.frame(current_tax$X.OTU.ID, logCPM)
#### general
long_logCPM <- pivot_longer(long_logCPM, names_to = "name", values_to = "value", cols = 2:ncol(long_logCPM))
colnames(long_logCPM)[1] <- "OTU"
ggplot(long_logCPM, aes(x=name,y=value))+
geom_boxplot()+
theme(axis.text.x = element_text(angle=90))+
xlab('sample')+
ylab('log2(CPM(raw counts + 1))')
sample_data <- current_meta
rownames(sample_data) <- rownames(current_meta)
View(sample_data)
cormat <- cor(logCPM, method = "pearson")
pheatmap(cormat, cluster_rows = T, cluster_cols = T,annotation_col = sample_data)
View(sample_data)
View(sample_data)
View(dge)
View(long_logCPM)
colnames(logCPM) <- gsub("\\.", "\\-", colnames(logCPM))
colnames(sample_data)[1] <- "Samples"
cormat <- cor(logCPM, method = "pearson")
pheatmap(cormat, cluster_rows = T, cluster_cols = T,annotation_col = sample_data)
PC<-prcomp(t(logCPM),center = TRUE,scale=FALSE)
pca_summary=summary(PC)
PCi<-data.frame(PC$x,
Age=sample_data$Age[match(colnames(logCPM),rownames(sample_data))],
Group=sample_data$Group[match(colnames(logCPM),rownames(sample_data))])
PC<-prcomp(t(logCPM),center = TRUE,scale=FALSE)
pca_summary=summary(PC)
PCi<-data.frame(PC$x,
Age=sample_data$Age[match(colnames(logCPM),rownames(sample_data))],
Group=sample_data$Group[match(colnames(logCPM),rownames(sample_data))])
View(pca_summary)
library(ggrepel)
ggplot(PCi,aes(x=PC1,y=PC2,label=Age,col=Group))+
geom_point(size=2.9,alpha=0.8)+
theme(legend.key.size = unit(0.2, "cm"))+
xlab(paste(c('PC1: ',round(pca_summary$importance[2,1],digits = 2)*100,'% variance'),collapse = '')) +
ylab(paste(c('PC2: ',round(pca_summary$importance[2,2],digits = 2)*100,'% variance'),collapse = '')) +
geom_label_repel(size=3.5,show.legend = FALSE,
aes( label = Age,size=2),
box.padding = 0.35, point.padding = 0.5,color=1,
segment.color = 'grey50') +
theme_classic()
ggplot(PCi,aes(x=PC1,y=PC2,col=Group))+
geom_point(size=2.9,alpha=0.8)+
theme(legend.key.size = unit(0.2, "cm"))+
xlab(paste(c('PC1: ',round(pca_summary$importance[2,1],digits = 2)*100,'% variance'),collapse = '')) +
ylab(paste(c('PC2: ',round(pca_summary$importance[2,2],digits = 2)*100,'% variance'),collapse = '')) +
theme_classic()
PCi<-data.frame(PC$x,
Age=sample_data$Age[match(colnames(logCPM),rownames(sample_data))],
Group=sample_data$Group[match(colnames(logCPM),rownames(sample_data))])
PC$x
Age=sample_data$Age[match(colnames(logCPM),rownames(sample_data))]
Group=sample_data$Group[match(colnames(logCPM),rownames(sample_data))]
View(sample_data)
colnames(sample_data)
colnames(sample_data)[1] <- "Group"
PCi<-data.frame(PC$x,
Age=sample_data$Age[match(colnames(logCPM),rownames(sample_data))],
Group=sample_data$Group[match(colnames(logCPM),rownames(sample_data))])
library(ggrepel)
ggplot(PCi,aes(x=PC1,y=PC2,label=Age,col=Group))+
geom_point(size=2.9,alpha=0.8)+
theme(legend.key.size = unit(0.2, "cm"))+
xlab(paste(c('PC1: ',round(pca_summary$importance[2,1],digits = 2)*100,'% variance'),collapse = '')) +
ylab(paste(c('PC2: ',round(pca_summary$importance[2,2],digits = 2)*100,'% variance'),collapse = '')) +
geom_label_repel(size=3.5,show.legend = FALSE,
aes( label = Age,size=2),
box.padding = 0.35, point.padding = 0.5,color=1,
segment.color = 'grey50') +
theme_classic()
ggplot(PCi,aes(x=PC1,y=PC2,col=Group))+
geom_point(size=2.9,alpha=0.8)+
theme(legend.key.size = unit(0.2, "cm"))+
xlab(paste(c('PC1: ',round(pca_summary$importance[2,1],digits = 2)*100,'% variance'),collapse = '')) +
ylab(paste(c('PC2: ',round(pca_summary$importance[2,2],digits = 2)*100,'% variance'),collapse = '')) +
theme_classic()
ggplot(PCi,aes(x=PC1,y=PC2,col=Age))+
geom_point(size=2.9,alpha=0.8)+
theme(legend.key.size = unit(0.2, "cm"))+
xlab(paste(c('PC1: ',round(pca_summary$importance[2,1],digits = 2)*100,'% variance'),collapse = '')) +
ylab(paste(c('PC2: ',round(pca_summary$importance[2,2],digits = 2)*100,'% variance'),collapse = '')) +
theme_classic()
ggplot(PCi,aes(x=PC1,y=PC2,col=Group))+
geom_point(size=2.9,alpha=0.8)+
theme(legend.key.size = unit(0.2, "cm"))+
xlab(paste(c('PC1: ',round(pca_summary$importance[2,1],digits = 2)*100,'% variance'),collapse = '')) +
ylab(paste(c('PC2: ',round(pca_summary$importance[2,2],digits = 2)*100,'% variance'),collapse = '')) +
theme_classic()
ggplot(PCi,aes(x=PC1,y=PC2,col=Age))+
geom_point(size=2.9,alpha=0.8)+
theme(legend.key.size = unit(0.2, "cm"))+
xlab(paste(c('PC1: ',round(pca_summary$importance[2,1],digits = 2)*100,'% variance'),collapse = '')) +
ylab(paste(c('PC2: ',round(pca_summary$importance[2,2],digits = 2)*100,'% variance'),collapse = '')) +
theme_classic()
View(sample_data)
sample_data[sample_data$Age]
sample_data[,sample_data$Age == 14]
sample_data[sample_data$Age == 14,]
sample_data <- sample_data[sample_data$Age == 14,]
View(logCPM)
x <- colnames(logCPM) %in% rownames(sample_data)
x <- logCPM[,colnames(logCPM) %in% rownames(sample_data)]
cormat <- cor(logCPM, method = "pearson")
pheatmap(cormat, cluster_rows = T, cluster_cols = T,annotation_col = sample_data)
cormat <- cor(logCPM, method = "pearson")
pheatmap(cormat, cluster_rows = T, cluster_cols = T,annotation_col = sample_data)
rm(cormat)
cormat <- cor(logCPM, method = "pearson")
logCPM <- logCPM[,colnames(logCPM) %in% rownames(sample_data)]
cormat <- cor(logCPM, method = "pearson")
pheatmap(cormat, cluster_rows = T, cluster_cols = T,annotation_col = sample_data)
PC<-prcomp(t(logCPM),center = TRUE,scale=FALSE)
pca_summary=summary(PC)
PCi<-data.frame(PC$x,
Age=sample_data$Age[match(colnames(logCPM),rownames(sample_data))],
Group=sample_data$Group[match(colnames(logCPM),rownames(sample_data))])
library(ggrepel)
ggplot(PCi,aes(x=PC1,y=PC2,label=Age,col=Group))+
geom_point(size=2.9,alpha=0.8)+
theme(legend.key.size = unit(0.2, "cm"))+
xlab(paste(c('PC1: ',round(pca_summary$importance[2,1],digits = 2)*100,'% variance'),collapse = '')) +
ylab(paste(c('PC2: ',round(pca_summary$importance[2,2],digits = 2)*100,'% variance'),collapse = '')) +
geom_label_repel(size=3.5,show.legend = FALSE,
aes( label = Age,size=2),
box.padding = 0.35, point.padding = 0.5,color=1,
segment.color = 'grey50') +
theme_classic()
ggplot(PCi,aes(x=PC1,y=PC2,col=Group))+
geom_point(size=2.9,alpha=0.8)+
theme(legend.key.size = unit(0.2, "cm"))+
xlab(paste(c('PC1: ',round(pca_summary$importance[2,1],digits = 2)*100,'% variance'),collapse = '')) +
ylab(paste(c('PC2: ',round(pca_summary$importance[2,2],digits = 2)*100,'% variance'),collapse = '')) +
theme_classic()
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
library(limma)
library(edgeR)
library(stringr)
library(data.table)
library(tidyr)
library(pheatmap)
library(DESeq2)
library(ggplot2)
taxonomic_data <- fread("taxonomic_data_all_samples.tsv", sep = "\t")
meta_data <- readxl::read_xlsx("67NR-4T1-ABXTreatment_20201003_Metadata.xlsx")
taxonomic_data <- as.data.frame(taxonomic_data)
colnames(meta_data)[1] <- "MBI_ID"
colnames(meta_data)[2] <- "sample_ID"
meta_data <- meta_data[,c(1:4)]
meta_data$Age <- gsub(" Weeks", "", meta_data$Age)
meta_data$Group <- gsub(" \\+ ", "_", meta_data$Group)
meta_data$Group <- gsub("\\+", "_", meta_data$Group)
filter_tax <- taxonomic_data[,grepl("S00CT", colnames(taxonomic_data))]
# keep taxa with >= 50 counts across all samples
taxonomic_data <- taxonomic_data[rowSums(filter_tax) >= 50,]
filter_tax <- filter_tax[rowSums(filter_tax) >= 50,]
# keep taxa with 0 values in < 90% of samples
taxonomic_data <- taxonomic_data[((apply(filter_tax, 1, function(x) length(which(x == 0))))/ncol(filter_tax)) < 0.9,]
# remove taxa with  50 counts
# remove taxa observed in < 10% of samples
new_cols <- colnames(taxonomic_data)[grepl("S00CT", colnames(taxonomic_data))]
new_cols <- str_sub(new_cols, 0, 10)
colnames(taxonomic_data)[grepl("S00CT", colnames(taxonomic_data))] <- new_cols
meta_data <- as.data.frame(meta_data)
rownames(meta_data) <- meta_data$MBI_ID
meta_data <- meta_data[,-c(1:2)]
dds_counts <- taxonomic_data[,grepl("S00CT", colnames(taxonomic_data))]
current_meta <- meta_data[meta_data$Group == "4T1" | meta_data$Group == "67NR", ]
current_meta <- current_meta[current_meta$Age == 14, ]
dds_counts <- dds_counts[, colnames(dds_counts) %in% rownames(current_meta)]
rownames(dds_counts) <- taxonomic_data$`#OTU ID`
dds_counts <- dds_counts[,match(rownames(current_meta), colnames(dds_counts))]
dds <- DESeqDataSetFromMatrix(dds_counts,
colData = current_meta,
design = ~Group)
current_meta <- meta_data[meta_data$Group == "67NR_ABX" | meta_data$Group == "67NR", ]
current_meta <- current_meta[current_meta$Age == 14, ]
dds_counts <- dds_counts[, colnames(dds_counts) %in% rownames(current_meta)]
rownames(dds_counts) <- taxonomic_data$`#OTU ID`
dds_counts <- dds_counts[,match(rownames(current_meta), colnames(dds_counts))]
View(current_meta)
View(dds_counts)
dds_counts <- taxonomic_data[,grepl("S00CT", colnames(taxonomic_data))]
View(dds_counts)
dds_counts <- dds_counts[, colnames(dds_counts) %in% rownames(current_meta)]
match(rownames(current_meta), colnames(dds_counts))
dds_counts <- dds_counts[,match(rownames(current_meta), colnames(dds_counts))]
dds <- DESeqDataSetFromMatrix(dds_counts,
colData = current_meta,
design = ~Group)
dds <- DESeq(dds)
res <- results(dds)
resLFC <- lfcShrink(dds, coef="Group_4T1_ABX_vs_4T1", type="apeglm")
dds <- DESeq(dds)
res <- results(dds)
resLFC <- lfcShrink(dds, coef="Group_4T1_ABX_vs_4T1", type="apeglm")
resultsNames(dds)
dds_counts <- taxonomic_data[,grepl("S00CT", colnames(taxonomic_data))]
current_meta <- meta_data[meta_data$Group == "4T1_ABX" | meta_data$Group == "4T1", ]
current_meta <- current_meta[current_meta$Age == 14, ]
dds_counts <- dds_counts[, colnames(dds_counts) %in% rownames(current_meta)]
rownames(dds_counts) <- taxonomic_data$`#OTU ID`
dds_counts <- dds_counts[,match(rownames(current_meta), colnames(dds_counts))]
dds <- DESeqDataSetFromMatrix(dds_counts,
colData = current_meta,
design = ~Group)
dds <- DESeq(dds)
res <- results(dds)
resLFC <- lfcShrink(dds, coef="Group_4T1_ABX_vs_4T1", type="apeglm")
resOrdered <- res[order(res$pvalue),]
summary(res)
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
library(limma)
library(edgeR)
library(stringr)
library(data.table)
library(tidyr)
library(pheatmap)
library(DESeq2)
library(ggplot2)
taxonomic_data <- fread("taxonomic_data_all_samples.tsv", sep = "\t")
meta_data <- readxl::read_xlsx("67NR-4T1-ABXTreatment_20201003_Metadata.xlsx")
taxonomic_data <- as.data.frame(taxonomic_data)
colnames(meta_data)[1] <- "MBI_ID"
colnames(meta_data)[2] <- "sample_ID"
meta_data <- meta_data[,c(1:4)]
meta_data$Age <- gsub(" Weeks", "", meta_data$Age)
meta_data$Group <- gsub(" \\+ ", "_", meta_data$Group)
meta_data$Group <- gsub("\\+", "_", meta_data$Group)
filter_tax <- taxonomic_data[,grepl("S00CT", colnames(taxonomic_data))]
# keep taxa with >= 50 counts across all samples
taxonomic_data <- taxonomic_data[rowSums(filter_tax) >= 50,]
filter_tax <- filter_tax[rowSums(filter_tax) >= 50,]
# keep taxa with 0 values in < 90% of samples
taxonomic_data <- taxonomic_data[((apply(filter_tax, 1, function(x) length(which(x == 0))))/ncol(filter_tax)) < 0.9,]
new_cols <- colnames(taxonomic_data)[grepl("S00CT", colnames(taxonomic_data))]
new_cols <- str_sub(new_cols, 0, 10)
colnames(taxonomic_data)[grepl("S00CT", colnames(taxonomic_data))] <- new_cols
meta_data <- as.data.frame(meta_data)
rownames(meta_data) <- meta_data$MBI_ID
meta_data <- meta_data[,-c(1:2)]
# metastatic vs metastatic + ABX
current_meta <- meta_data[meta_data$Group == "4T1" | meta_data$Group == "4T1_ABX", ]
current_meta <- current_meta[current_meta$Age == 14, ]
View(current_meta)
current_tax <- taxonomic_data[, c(1,85)]
current_tax <- as.data.frame(c(current_tax, taxonomic_data[colnames(taxonomic_data) %in% rownames(current_meta)]))
### limma
df <- current_tax[,-c(1:2)]
dge <- DGEList(df)
dge <- calcNormFactors(dge, method = 'TMM')
### general
logCPM <- cpm(dge, log = TRUE, prior.count = 1)
logCPM <- as.data.frame(logCPM)
long_logCPM <- logCPM
###### limma
long_logCPM <- data.frame(current_tax$X.OTU.ID, logCPM)
#### general
long_logCPM <- pivot_longer(long_logCPM, names_to = "name", values_to = "value", cols = 2:ncol(long_logCPM))
colnames(long_logCPM)[1] <- "OTU"
ggplot(long_logCPM, aes(x=name,y=value))+
geom_boxplot()+
theme(axis.text.x = element_text(angle=90))+
xlab('sample')+
ylab('log2(CPM(raw counts + 1))')
### limma
df <- current_tax[,-c(1:2)]
dge <- DGEList(df)
### general
logCPM <- cpm(dge, log = TRUE, prior.count = 1)
logCPM <- as.data.frame(logCPM)
long_logCPM <- logCPM
###### limma
long_logCPM <- data.frame(current_tax$X.OTU.ID, logCPM)
#### general
long_logCPM <- pivot_longer(long_logCPM, names_to = "name", values_to = "value", cols = 2:ncol(long_logCPM))
colnames(long_logCPM)[1] <- "OTU"
ggplot(long_logCPM, aes(x=name,y=value))+
geom_boxplot()+
theme(axis.text.x = element_text(angle=90))+
xlab('sample')+
ylab('log2(CPM(raw counts + 1))')
### limma
df <- current_tax[,-c(1:2)]
dge <- DGEList(df)
dge <- calcNormFactors(dge, method = 'TMM')
### general
logCPM <- cpm(dge, log = TRUE, prior.count = 1)
logCPM <- as.data.frame(logCPM)
long_logCPM <- logCPM
long_logCPM <- long_logCPM[, c(ncol(long_logCPM), 1:(ncol(long_logCPM)-1))]
###### limma
long_logCPM <- data.frame(current_tax$X.OTU.ID, logCPM)
#### general
long_logCPM <- pivot_longer(long_logCPM, names_to = "name", values_to = "value", cols = 2:ncol(long_logCPM))
colnames(long_logCPM)[1] <- "OTU"
ggplot(long_logCPM, aes(x=name,y=value))+
geom_boxplot()+
theme(axis.text.x = element_text(angle=90))+
xlab('sample')+
ylab('log2(CPM(raw counts + 1))')
ggplot(long_logCPM, aes(x=value, color=name))+
geom_density()+
xlab('log2(CPM(raw counts + 1))')
sample_data <- current_meta
rownames(sample_data) <- rownames(current_meta)
sample_data <- current_meta[,-c(2)]
sample_data$Group <- factor(sample_data$Group)
colnames(logCPM) <- gsub("\\.", "\\-", colnames(logCPM))
colnames(sample_data)[1] <- "Samples"
sample_data <- current_meta
rownames(sample_data) <- rownames(current_meta)
colnames(logCPM) <- gsub("\\.", "\\-", colnames(logCPM))
colnames(sample_data)[1] <- "Samples"
sample_data <- as.data.frame(sample_data)
rownames(sample_data) <- sample_data$Samples
sample_data$Samples <- NULL
sample_data$Age <- as.numeric(sample_data$Age)
cormat <- cor(logCPM, method = "pearson")
pheatmap(cormat, cluster_rows = T, cluster_cols = T,annotation_col = sample_data)
View(sample_data)
sample_data <- current_meta
rownames(sample_data) <- rownames(current_meta)
colnames(logCPM) <- gsub("\\.", "\\-", colnames(logCPM))
View(sample_data)
sample_data <- as.data.frame(sample_data)
rownames(sample_data) <- sample_data$Samples
sample_data$Samples <- NULL
sample_data$Age <- as.numeric(sample_data$Age)
cormat <- cor(logCPM, method = "pearson")
pheatmap(cormat, cluster_rows = T, cluster_cols = T,annotation_col = sample_data)
View(cormat)
View(sample_data)
sample_data <- current_meta
rownames(sample_data) <- rownames(current_meta)
colnames(logCPM) <- gsub("\\.", "\\-", colnames(logCPM))
View(sample_data)
cormat <- cor(logCPM, method = "pearson")
pheatmap(cormat, cluster_rows = T, cluster_cols = T,annotation_col = sample_data)
PC<-prcomp(t(logCPM),center = TRUE,scale=FALSE)
pca_summary=summary(PC)
PCi<-data.frame(PC$x,
Age=sample_data$Age[match(colnames(logCPM),rownames(sample_data))],
Group=sample_data$Group[match(colnames(logCPM),rownames(sample_data))])
library(ggrepel)
ggplot(PCi,aes(x=PC1,y=PC2,label=Age,col=Group))+
geom_point(size=2.9,alpha=0.8)+
theme(legend.key.size = unit(0.2, "cm"))+
xlab(paste(c('PC1: ',round(pca_summary$importance[2,1],digits = 2)*100,'% variance'),collapse = '')) +
ylab(paste(c('PC2: ',round(pca_summary$importance[2,2],digits = 2)*100,'% variance'),collapse = '')) +
geom_label_repel(size=3.5,show.legend = FALSE,
aes( label = Age,size=2),
box.padding = 0.35, point.padding = 0.5,color=1,
segment.color = 'grey50') +
theme_classic()
ggplot(PCi,aes(x=PC1,y=PC2,col=Group))+
geom_point(size=2.9,alpha=0.8)+
theme(legend.key.size = unit(0.2, "cm"))+
xlab(paste(c('PC1: ',round(pca_summary$importance[2,1],digits = 2)*100,'% variance'),collapse = '')) +
ylab(paste(c('PC2: ',round(pca_summary$importance[2,2],digits = 2)*100,'% variance'),collapse = '')) +
theme_classic()
pheatmap(cormat, cluster_rows = T, cluster_cols = T,annotation_col = sample_data)
cormat <- cor(logCPM, method = "spearman")
pheatmap(cormat, cluster_rows = T, cluster_cols = T,annotation_col = sample_data)
# metastatic vs nonmetastatic
current_meta <- meta_data[meta_data$Group == "4T1" | meta_data$Group == "67NR", ]
current_tax <- taxonomic_data[, c(1,85)]
current_tax <- as.data.frame(c(current_tax, taxonomic_data[colnames(taxonomic_data) %in% rownames(current_meta)]))
### limma
df <- current_tax[,-c(1:2)]
dge <- DGEList(df)
dge <- calcNormFactors(dge, method = 'TMM')
### general
logCPM <- cpm(dge, log = TRUE, prior.count = 1)
logCPM <- as.data.frame(logCPM)
long_logCPM <- logCPM
###### limma
long_logCPM <- data.frame(current_tax$X.OTU.ID, logCPM)
#### general
long_logCPM <- pivot_longer(long_logCPM, names_to = "name", values_to = "value", cols = 2:ncol(long_logCPM))
colnames(long_logCPM)[1] <- "OTU"
ggplot(long_logCPM, aes(x=name,y=value))+
geom_boxplot()+
theme(axis.text.x = element_text(angle=90))+
xlab('sample')+
ylab('log2(CPM(raw counts + 1))')
ggplot(long_logCPM, aes(x=value, color=name))+
geom_density()+
xlab('log2(CPM(raw counts + 1))')
sample_data <- current_meta
rownames(sample_data) <- rownames(current_meta)
colnames(logCPM) <- gsub("\\.", "\\-", colnames(logCPM))
colnames(sample_data)[1] <- "Samples"
sample_data <- as.data.frame(sample_data)
rownames(sample_data) <- sample_data$Samples
sample_data$Samples <- NULL
sample_data$Age <- as.numeric(sample_data$Age)
cormat <- cor(logCPM, method = "spearman")
pheatmap(cormat, cluster_rows = T, cluster_cols = T,annotation_col = sample_data)
sample_data <- current_meta
rownames(sample_data) <- rownames(current_meta)
colnames(logCPM) <- gsub("\\.", "\\-", colnames(logCPM))
colnames(sample_data)[1] <- "Samples"
cormat <- cor(logCPM, method = "spearman")
PC<-prcomp(t(logCPM),center = TRUE,scale=FALSE)
pheatmap(cormat, cluster_rows = T, cluster_cols = T,annotation_col = sample_data)
current_meta <- meta_data[meta_data$Group == "4T1_ABX" | meta_data$Group == "4T1", ]
current_meta <- current_meta[current_meta$Age == 14, ]
dds_counts <- dds_counts[, colnames(dds_counts) %in% rownames(current_meta)]
dds_counts <- taxonomic_data[,grepl("S00CT", colnames(taxonomic_data))]
dds_counts <- dds_counts[, colnames(dds_counts) %in% rownames(current_meta)]
View(dds_counts)
colSums(dds_counts)
x <- colSums(dds_counts)
View(current_meta)
labels <- match(rownames(current_meta), colnames(x))
View(current_meta)
rownames(current_meta)
colnames(x)
x
data.frame(x)
x<-data.frame(x)
labels <- match(colnames(current_meta), colnames(x))
labels <- match(rownames(current_meta), rownames(x))
x$cond <- current_meta$Group[labels]
View(taxonomic_data)
View(x)
View(x)
labels <- match(rownames(current_meta), rownames(x))
View(current_meta)
View(x)
labels <- match(rownames(x), rownames(current_meta))
x$cond <- current_meta$Group[labels]
library(roxygen2)
roxygen2::roxygenise()
setwd("//phage.bcgsc.ca/projects/ptx_analysis/RR/PeptideRanger/PeptideRanger_dev/PeptideRanger/R")
setwd("..")
roxygen2::roxygenise()
roxygen2::roxygenise()
library(devtools)
roxygen2::roxygenise()
roxygen2::roxygenise()
library(devtools)
devtools::test("PeptideRanger")
# -- set WD --
setwd(dirname(rstudioapi::getSourceEditorContext()$path))
setwd("..")
roxygen2::roxygenise()
# -- set WD --
setwd(dirname(rstudioapi::getSourceEditorContext()$path))
setwd("..")
setwd("//phage.bcgsc.ca/projects/ptx_analysis/RR/PeptideRanger/PeptideRanger_dev/PeptideRanger")
roxygen2::roxygenise()
usethis::proj_get()
getwd()
roxygen2::roxygenize()
library(PeptideRanger)
library(dplur)
library(PeptideRanger)
?rbind()
?rbind
?max
?colnames
?!!
?rlang::`!!`()
roxygen2::roxygenize()
usethis::use_mit_license()
roxygen2::roxygenize()
roxygen2::roxygenize()
x <- CPTAC_exp_counts
View(x)
roxygen2::roxygenize()
roxygen2::roxygenize()
?PeptideRanger::CPTAC_exp_counts
x <- PeptideRanger::ProtDB_exp_counts
x <- PeptideRanger::SwissProt2018_peptidome
View(x)
x <- PeptideRanger::SwissProt2018_peptidome_synth
x <- PeptideRanger::tm_peptides
View(x)
x <- PeptideRanger::RFmodel_CPTAC
roxygen2::roxygenise()
roxygen2::roxygenise()
roxygen2::roxygenise()
roxygen2::roxygenise()
library(devtools)
use_readme_rmd()
use_readme_md()
use_build_ignore(file = "data/workflow.jpg")
roxygen2::roxygenise()
